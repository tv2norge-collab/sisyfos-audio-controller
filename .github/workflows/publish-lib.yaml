name: Publish prerelease

env:
  node-version: 18
  node-package-manager: yarn

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  prerelease:
    name: Prerelease
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node-version }}
      - name: Enable Corepack
        run: corepack enable
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Configure CodeArtifact Token
        run: |
          CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token \
            --domain ${{ secrets.AWS_CODE_ARTIFACT_DOMAIN }} \
            --domain-owner ${{ secrets.AWS_ACCOUNT_ID }} \
            --region ${{ secrets.AWS_REGION }} \
            --query authorizationToken \
            --output text)
          echo "CODEARTIFACT_AUTH_TOKEN=$CODEARTIFACT_AUTH_TOKEN" >> $GITHUB_ENV
      - name: Check release is desired
        id: do-publish
        run: |
          if [ -z "${{ secrets.AWS_ROLE_ARN }}" ]; then
            echo "No Token"
          elif [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "Publish nightly"
            echo "publish=nightly" >> $GITHUB_OUTPUT
          else
            echo "Publish experimental"
            echo "publish=experimental" >> $GITHUB_OUTPUT
          fi

      - name: Prepare Environment
        if: ${{ steps.do-publish.outputs.publish }}
        run: |
          yarn install
          yarn build
        env:
          CI: true
      - name: Bump version
        if: ${{ steps.do-publish.outputs.publish }}
        run: |
          git config --global user.name "${{ github.event.pusher.name }}"
          git config --global user.email "${{ github.event.pusher.email }}"

          COMMIT_TIMESTAMP=$(git log -1 --pretty=format:%ct HEAD)
          COMMIT_DATE=$(date -d @$COMMIT_TIMESTAMP +%Y%m%d-%H%M%S)
          GIT_HASH=$(git rev-parse --short HEAD)
          PRERELEASE_TAG=nightly-$(echo "${{ github.ref_name }}" | sed -r 's/[^a-z0-9]+/-/gi')
          CURRENT_VERSION=$(node -p "require('./component-lib/package.json').version")
          cd component-lib
          yarn version "$CURRENT_VERSION-$PRERELEASE_TAG-$COMMIT_DATE-$GIT_HASH"
        env:
          CI: true

      - name: Retrieve CodeArtifact endpoint
        id: codeartifact
        run: |
            cd component-lib

            echo "Fetching CodeArtifact repository endpoint..."
            REPOSITORY_ENDPOINT=$(aws codeartifact get-repository-endpoint \
                --domain ${{ secrets.AWS_CODE_ARTIFACT_DOMAIN }} \
                --domain-owner ${{ secrets.AWS_ACCOUNT_ID }} \
                --repository ${{ secrets.AWS_CODE_ARTIFACT_REPOSITORY }} \
                --format npm \
                --region ${{ secrets.AWS_REGION }} \
                --query repositoryEndpoint \
                --output text)

            echo "REPOSITORY_ENDPOINT=$REPOSITORY_ENDPOINT" >> $GITHUB_ENV

      - name: Configure Yarn for AWS CodeArtifact
        run: |
            yarn config set npmRegistryServer "$REPOSITORY_ENDPOINT"
            yarn config set "npmRegistries[\"$REPOSITORY_ENDPOINT\"].npmAuthToken" "$CODEARTIFACT_AUTH_TOKEN"
            yarn config set "npmRegistries[\"$REPOSITORY_ENDPOINT\"].npmAlwaysAuth" true

      - name: Publish to Code Artifatct
        if: ${{ steps.do-publish.outputs.publish }}
        run: |
          NEW_VERSION=$(node -p "require('./component-lib/package.json').version")

          cd component-lib
          yarn npm publish --tag "$NEW_VERSION"

          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "**Published:** $NEW_VERSION" >> $GITHUB_STEP_SUMMARY
        env:
          CI: true
